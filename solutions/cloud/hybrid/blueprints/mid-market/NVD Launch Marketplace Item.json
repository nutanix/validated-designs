{"status":{},"contains_secrets":false,"product_version":"3.7.2","spec":{"description":"","resources":{"endpoints_information":[],"endpoint_definition_list":[],"client_attrs":{},"credential_definition_list":[],"runbook":{"task_definition_list":[{"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[{"kind":"app_task","name":"getProjectEnvironment"},{"kind":"app_task","name":"getMarketPlaceUUID"},{"kind":"app_task","name":"createBP"},{"kind":"app_task","name":"launchBP"}],"name":"c8ae43dc_dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"getMarketPlaceUUID"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"createBP"}},{"from_task_reference":{"kind":"app_task","name":"createBP"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"launchBP"}},{"from_task_reference":{"kind":"app_task","name":"getProjectEnvironment"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"getMarketPlaceUUID"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[],"name":"getProjectEnvironment","attrs":{"exit_status":[],"script":"# variable definition\napi_fqdn = \"@@{SELFSERVICE_API_FQDN}@@\"\napi_user = '@@{API_USERNAME}@@'\napi_pass = '@@{API_SECRET}@@'\nproject_name = '@@{PROJECT_NAME}@@'\nenvironment_name = \"@@{ENVIRONMENT_NAME}@@\"\n\n# headers, url and payload definition\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\nurl = \"https:\/\/{}:9440\/api\/nutanix\/v3\/projects\/list\".format(api_fqdn)\npayload = json.dumps({\"filter\": \"name==\"+project_name+\"\"})\n\n# retrieve project details\nresponse = urlreq(url, verb='POST', auth='BASIC', user=api_user, passwd=api_pass, params=payload, headers=headers)\n\nif response.ok:\n  get_response = json.loads(response.content)\n  project_uuid = get_response['entities'][0]['metadata']['uuid']\nelse:\n  exit(1)\n\nenv_uuid = []\nfor x in get_response['entities'][0]['spec']['resources']['environment_reference_list']:\n  url = \"https:\/\/{}:9440\/api\/nutanix\/v3\/environments\/list\".format(api_fqdn)\n  payload = json.dumps({\"filter\": \"uuid==\"+x['uuid']+\"\"})\n  response = urlreq(url, verb='POST', auth='BASIC', user=api_user, passwd=api_pass, params=payload, headers=headers)\n  get_response = json.loads(response.content)\n  if get_response['entities'][0]['status']['name'] == environment_name:\n    env_uuid = x['uuid']\n\n# save to calm variables \nprint(\"PROJECT_UUID={}\".format(project_uuid))\nprint(\"ENVIRONMENT_UUID={}\".format(env_uuid))","eval_variables":["PROJECT_UUID","ENVIRONMENT_UUID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[],"name":"getMarketPlaceUUID","attrs":{"exit_status":[],"script":"# variable definition\napi_fqdn = \"@@{SELFSERVICE_API_FQDN}@@\"\napi_user = '@@{API_USERNAME}@@'\napi_pass = '@@{API_SECRET}@@'\nmarketplace_name = \"@@{MARKETPLACE_ITEM_NAME}@@\"\nmarketplace_version = \"@@{MARKETPLACE_ITEM_VERSION}@@\"\n\n# headers, url and payload definition\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\nurl = \"https:\/\/{}:9440\/api\/nutanix\/v3\/calm_marketplace_items\/list\".format(api_fqdn)\npayload = json.dumps({\"filter\": \"name==\"+marketplace_name+\"\"})\n\n# retrieve marketplace uuid details\nresponse = urlreq(url, verb='POST', auth='BASIC', user=api_user, passwd=api_pass, params=payload, headers=headers)\n\nif response.ok:\n  get_response = json.loads(response.content)\nelse:\n  exit(1)\n\nfor x in get_response['entities']:\n  if x['status']['version'] == marketplace_version:\n    marketplace_uuid = x['status']['uuid']\n\n# save to calm variables \nprint(\"MARKETPLACE_UUID={}\".format(marketplace_uuid))","eval_variables":["MARKETPLACE_UUID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[],"name":"createBP","attrs":{"exit_status":[],"script":"# variable definition\napi_fqdn = \"@@{SELFSERVICE_API_FQDN}@@\"\napi_user = '@@{API_USERNAME}@@'\napi_pass = '@@{API_SECRET}@@'\nproject_uuid = \"@@{PROJECT_UUID}@@\"\nenv_uuid = \"@@{ENVIRONMENT_UUID}@@\"\nreplication_method = \"@@{REPLICATION_METHOD}@@\"\nmarketplace_uuid = \"@@{MARKETPLACE_UUID}@@\"\n# headers, url and payload definition\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\nurl = \"https:\/\/{}:9440\/api\/nutanix\/v3\/calm_marketplace_items\/{}\".format(api_fqdn,marketplace_uuid)\npayload = \"\"\n\n# retrieve marketplace item details\nresponse = urlreq(url, verb='GET', auth='BASIC', user=api_user, passwd=api_pass, params=payload, headers=headers)\n\n# validate the response\nif response.ok:\n  get_response = json.loads(response.content)\n  bp_name = get_response['spec']['name']+\"-\"+str(@@{calm_random}@@)\nelse:\n  print response.text\n  exit(1)\n\n# modify the blueprint specifications\nbp_spec = {}\nbp_spec['spec'] = get_response['spec']['resources']['app_blueprint_template']['spec'] # set marketplace spec as blueprint spec\nbp_spec['spec']['resources']['app_profile_list'][0]['variable_list'][0]['value'] = replication_method # change variables\ndel bp_spec['spec']['name'] # delete the name object from above assigned spec object\nbp_spec['spec']['environment_uuid'] = env_uuid # Set Environment UUID\n#bp_name = \"some random name here\" # Some random blueprint name\nbp_spec['spec']['app_blueprint_name'] = bp_name\nbp_spec['metadata'] = {\n        \"kind\": \"blueprint\",\n        \"project_reference\": {\n            \"kind\": \"project\",\n            \"uuid\": project_uuid  # Project UUID\n        },\n        \"categories\": get_response[\"metadata\"][\"categories\"]\n    } # generating metadata for the blueprint.\nbp_spec['api_version'] = \"3.0\"\n\n# set url and payload for launch\nurl = \"https:\/\/{}:9440\/api\/nutanix\/v3\/blueprints\/marketplace_launch\".format(api_fqdn)\npayload = json.dumps(bp_spec)\n\n# initiate the marketplace launch\nresponse = urlreq(url, verb='POST', auth='BASIC', user=api_user, passwd=api_pass, params=payload, headers=headers)\nif response.ok:\n  get_response = json.loads(response.content)\n  print('BP_UUID={}').format(get_response['metadata']['uuid'])\nelse:\n  print response.text\n  exit(1)","eval_variables":["BP_UUID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[],"name":"launchBP","attrs":{"script":"# variable definition\napi_fqdn = \"@@{SELFSERVICE_API_FQDN}@@\"\napi_user = '@@{API_USERNAME}@@'\napi_pass = '@@{API_SECRET}@@'\napp_name = \"@@{APPLICATION_NAME}@@\"\napp_instances = range(@@{INSTANCES}@@)\nbp_uuid = \"@@{BP_UUID}@@\"\n\n# headers, url and payload definition\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\nurl = \"https:\/\/{}:9440\/api\/nutanix\/v3\/blueprints\/{}\".format(api_fqdn,bp_uuid)\npayload = json.dumps({})\n\n# retrieve blueprint details\nresponse = urlreq(url, verb='GET', auth='BASIC', user=api_user, passwd=api_pass, params=payload, headers=headers)\nif response.ok:\n  get_response = json.loads(response.content)\n  app_profile_uuid = get_response['status']['resources']['app_profile_list'][0]['uuid']\nelse:\n  print response.text\n  exit(1)\n\nfor instance in app_instances:\n  app_launch_name = app_name+\"-\"+str(@@{calm_random}@@)+\"-\"+str(instance)\n  url = \"https:\/\/{}:9440\/api\/nutanix\/v3\/blueprints\/{}\/simple_launch\".format(api_fqdn,bp_uuid)\n  payload = json.dumps({\"spec\": {\"app_profile_reference\": {\"kind\": \"app_profile\",\"uuid\": app_profile_uuid},\"app_name\": app_launch_name}})\n  response = urlreq(url, verb='POST', auth='BASIC', user=api_user, passwd=api_pass, params=payload, headers=headers)\n  if response.ok:\n    print('SUCCESS: App with name {} launched...').format(app_launch_name)\n  else:\n    print response.text","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"4e68d0bd_runbook","main_task_local_reference":{"kind":"app_task","name":"c8ae43dc_dag"},"variable_list":[{"val_type":"STRING","is_mandatory":true,"description":"Please enter your Self-Service username","data_type":"BASE","type":"LOCAL","name":"API_USERNAME","value":"","label":"Username","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"Please enter your Self-Service password","data_type":"BASE","type":"SECRET","name":"API_SECRET","value":"","label":"Password","attrs":{"is_secret_modified":false,"secret_reference":{},"type":"SECRET"},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"Please select the correct project you want to use","data_type":"BASE","type":"EXEC_LOCAL","name":"PROJECT_NAME","value":"","label":"Project name","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"EXEC","attrs":{"script":"# variable definition\napi_fqdn = \"@@{SELFSERVICE_API_FQDN}@@\"\nproject_names = []\napi_user = '@@{API_USERNAME}@@'\napi_pass = '@@{API_SECRET}@@'\n\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\nurl = \"https:\/\/{}:9440\/api\/nutanix\/v3\/projects\/list\".format(api_fqdn)\npayload = json.dumps({})\n\n# retrieve project details\nresponse = urlreq(url, verb='POST', auth='BASIC', user=api_user, passwd=api_pass, params=payload, headers=headers)\n\n# check if response is OK, otherwise exit\nif response.ok:\n  get_response = json.loads(response.content)\n  if get_response['metadata']['total_matches'] == 0:\n    print('ERROR: Specified project does not exist...')\n  else:\n    #get_response['entities'][0]['metadata']['uuid']\n    for x in get_response['entities']:\n      project_names.append(x['status']['name'])\n    print(\",\".join(sorted(project_names)))\nelse:\n  print('ERROR: Unable to execute API call...')","type":"EXEC","command_line_args":"","exit_status":[],"script_type":"static"}}},{"val_type":"STRING","is_mandatory":false,"description":"Please select correct environment which will be used for the application launch","data_type":"BASE","type":"EXEC_LOCAL","name":"ENVIRONMENT_NAME","value":"","label":"Environment","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"EXEC","attrs":{"script":"# variable definition\napi_fqdn = \"@@{SELFSERVICE_API_FQDN}@@\"\nenv_names = []\napi_user = '@@{API_USERNAME}@@'\napi_pass = '@@{API_SECRET}@@'\nproject_name = '@@{PROJECT_NAME}@@'\n\n# headers, url and payload definition\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\nurl = \"https:\/\/{}:9440\/api\/nutanix\/v3\/projects\/list\".format(api_fqdn)\npayload = json.dumps({\"filter\": \"name==%s\"}) % (project_name)\n\n# retrieve environment details\nresponse = urlreq(url, verb='POST', auth='BASIC', user=api_user, passwd=api_pass, params=payload, headers=headers)\n\n# check if response is OK, otherwise exit\nif response.ok:\n  get_response = json.loads(response.content)\n  if get_response['metadata']['total_matches'] == 0:\n    print('ERROR: Specified project does not exist...')\nelse:\n  print('ERROR: Unable to execute API call...')\n\nproject_uuid = get_response['entities'][0]['metadata']['uuid']\nenvironment_uuids = []\nfor x in get_response['entities'][0]['spec']['resources']['environment_reference_list']:\n  #environment_uuids.append(x['uuid'])\n  url = \"https:\/\/{}:9440\/api\/nutanix\/v3\/environments\/list\".format(api_fqdn)\n  payload = json.dumps({\"filter\": \"uuid==\"+x['uuid']+\"\"})\n  response = urlreq(url, verb='POST', auth='BASIC', user=api_user, passwd=api_pass, params=payload, headers=headers)\n  get_response = json.loads(response.content)\n  if get_response['metadata']['total_matches'] > 0:\n    env_names.append(get_response['entities'][0]['status']['name'])\n    print(\",\".join(sorted(env_names)))\n  else:\n    print('ERROR: Given project does not have environments configured...')","type":"EXEC","command_line_args":"","exit_status":[],"script_type":"static"}}},{"val_type":"STRING","is_mandatory":true,"description":"Please select the replication method for the application instances","data_type":"BASE","type":"LOCAL","name":"REPLICATION_METHOD","value":"Async","label":"Replication method","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":["Async","Sync","None"]}},{"val_type":"STRING","is_mandatory":true,"description":"Please enter the application name","data_type":"BASE","type":"LOCAL","name":"APPLICATION_NAME","value":"","label":"Application name","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"regex":{"should_validate":false,"value":"^[\\d]*$"},"val_type":"INT","is_mandatory":true,"description":"Please enter the amount of application instances you want to launch","data_type":"BASE","type":"LOCAL","name":"INSTANCES","value":"","label":"Instances","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"Please enter the name of the published marketplace item you want to launch","data_type":"BASE","type":"EXEC_LOCAL","name":"MARKETPLACE_ITEM_NAME","value":"","label":"Marketplace item name","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"EXEC","attrs":{"script":"import requests\n\n# variable definition\napi_fqdn = \"@@{SELFSERVICE_API_FQDN}@@\"\nproject_names = []\napi_user = '@@{API_USERNAME}@@'\napi_pass = '@@{API_SECRET}@@'\n\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\nurl = \"https:\/\/{}:9440\/api\/nutanix\/v3\/calm_marketplace_items\/list\".format(api_fqdn)\npayload = json.dumps({\"filter\": \"name==.*[n|N][v|V][d|D].*\"})\n\n# retrieve project details\nresponse = urlreq(url, verb='POST', auth='BASIC', user=api_user, passwd=api_pass, params=payload, headers=headers)\n\n# check if response is OK, otherwise exit\nif response.ok:\n  get_response = json.loads(response.content)\n  if get_response['metadata']['total_matches'] == 0:\n    print('ERROR: Specified project does not exist...')\n  else:\n    #get_response['entities'][0]['metadata']['uuid']\n    for x in get_response['entities']:\n      project_names.append(x['status']['name'])\n    print(\",\".join(sorted(set(project_names))))\nelse:\n  print('ERROR: Unable to execute API call...')","type":"EXEC","command_line_args":"","exit_status":[],"script_type":"static"}}},{"val_type":"STRING","is_mandatory":true,"description":"Please enter the correct version of the marketplace item (ie. 0.0.3, 1.0.0)","data_type":"BASE","type":"EXEC_LOCAL","name":"MARKETPLACE_ITEM_VERSION","value":"","label":"Marketplace item version","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"EXEC","attrs":{"script":"# variable definition\napi_fqdn = \"@@{SELFSERVICE_API_FQDN}@@\"\napi_user = '@@{API_USERNAME}@@'\napi_pass = '@@{API_SECRET}@@'\nmarketplace_item_name = '@@{MARKETPLACE_ITEM_NAME}@@'\nmarketplace_item_versions = []\n\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\nurl = \"https:\/\/{}:9440\/api\/nutanix\/v3\/calm_marketplace_items\/list\".format(api_fqdn)\npayload = json.dumps({\"filter\": \"name==%s\"}) % (marketplace_item_name)\n\n# retrieve project details\nresponse = urlreq(url, verb='POST', auth='BASIC', user=api_user, passwd=api_pass, params=payload, headers=headers)\n\n# check if response is OK, otherwise exit\nif response.ok:\n  get_response = json.loads(response.content)\n  if get_response['metadata']['total_matches'] == 0:\n    print('ERROR: Specified project does not exist...')\n  else:\n    #get_response['entities'][0]['metadata']['uuid']\n    for x in get_response['entities']:\n      marketplace_item_versions.append(x['status']['version'])\n    print(\",\".join(sorted(marketplace_item_versions)))\nelse:\n  print('ERROR: Unable to execute API call...')","type":"EXEC","command_line_args":"","exit_status":[],"script_type":"static"}}},{"val_type":"STRING","is_mandatory":false,"description":"Please enter the name of the published marketplace item you want to launch","data_type":"BASE","type":"LOCAL","name":"MARKETPLACE_ITEM_NAME_OLD","value":"","label":"Marketplace item name","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"Please enter the correct version of the marketplace item (ie. 0.0.3, 1.0.0)","data_type":"BASE","type":"LOCAL","name":"MARKETPLACE_ITEM_VERSION_OLD","value":"","label":"Marketplace item version","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"SELFSERVICE_API_FQDN","value":"127.0.0.1","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}}]}},"name":"NVD Launch Marketplace Item"},"api_version":"3.0","metadata":{"last_update_time":"1708467335745445","kind":"runbook","spec_version":36,"creation_time":"1708344966381098","name":"NVD Launch Marketplace Item"}}